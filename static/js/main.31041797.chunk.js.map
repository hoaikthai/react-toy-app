{"version":3,"sources":["pages/Home.tsx","components/Memo.tsx","components/HeavyTable/HeavyTableRow.tsx","pages/HeavyTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","Root","to","styled","div","Children","props","deps","children","Memo","memo","oldProps","newProps","JSON","stringify","HeavyTableRow","rowData","index","handleFieldChange","nameOptions","sampleTableData","data","map","item","name","useState","isEditing","setIsEditing","TableRow","hover","TableCell","Select","label","value","onChange","e","target","idx","MenuItem","prop1","TextField","prop2","prop3","prop4","prop5","prop6","prop7","prop8","prop9","prop10","prop11","prop12","prop13","prop14","Button","onClick","prev","variant","HeavyTable","sampleData","generatedData","Array","fill","Math","round","random","length","filter","setData","useCallback","field","prevData","Table","TableHead","TableBody","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31041797.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nexport const Home = () => {\n  return (\n    <Root>\n      <Link to=\"/react-toy-app/heavy-table\">Heavy table</Link>\n    </Root>\n  )\n}\n\nconst Root = styled.div`\n  padding: 32px;\n`\n","import { memo, ReactNode } from \"react\"\n\nexport type MemoProps = {\n  deps?: any[]\n  children?: ReactNode | ReactNode[]\n}\n\nconst Children = (props: MemoProps) => {\n  const { deps = [], children } = props\n\n  return <>{children}</>\n}\n\nexport const Memo = memo(\n  Children,\n  (oldProps, newProps) => JSON.stringify(oldProps.deps) === JSON.stringify(newProps.deps)\n)\n","import { TableRow, TableCell, Select, MenuItem, TextField, Button } from \"@mui/material\"\nimport { ItemType } from \"../../pages/HeavyTable\"\nimport sampleTableData from \"../../assets/data/sample-table-data.json\"\nimport { Memo } from \"../Memo\"\nimport { useState } from \"react\"\n\nexport type HeavyTableRowProps = {\n  index: number\n  rowData: ItemType\n  handleFieldChange: (index: number, field: string, value: string) => void\n}\n\nexport const HeavyTableRow = (props: HeavyTableRowProps) => {\n  const { rowData, index, handleFieldChange } = props\n  const sampleData = sampleTableData.data\n  const nameOptions = sampleData.map((item) => item.name)\n  const [isEditing, setIsEditing] = useState(false)\n\n  const handleSwitchEditMode = () => setIsEditing((prev) => !prev)\n\n  return (\n    <TableRow hover>\n      <Memo deps={[rowData.name, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <Select\n              label=\"Name\"\n              value={rowData.name}\n              onChange={(e) => handleFieldChange(index, \"name\", e.target.value)}\n            >\n              {nameOptions.map((name, idx) => (\n                <MenuItem key={idx} value={name}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          ) : (\n            rowData.name\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop1, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 1\"\n              value={rowData.prop1}\n              onChange={(e) => handleFieldChange(index, \"prop1\", e.target.value)}\n            />\n          ) : (\n            rowData.prop1\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop2, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 2\"\n              value={rowData.prop2}\n              onChange={(e) => handleFieldChange(index, \"prop2\", e.target.value)}\n            />\n          ) : (\n            rowData.prop2\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop3, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 3\"\n              value={rowData.prop3}\n              onChange={(e) => handleFieldChange(index, \"prop3\", e.target.value)}\n            />\n          ) : (\n            rowData.prop3\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop4, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 4\"\n              value={rowData.prop4}\n              onChange={(e) => handleFieldChange(index, \"prop4\", e.target.value)}\n            />\n          ) : (\n            rowData.prop4\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop5, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 5\"\n              value={rowData.prop5}\n              onChange={(e) => handleFieldChange(index, \"prop5\", e.target.value)}\n            />\n          ) : (\n            rowData.prop5\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop6, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 6\"\n              value={rowData.prop6}\n              onChange={(e) => handleFieldChange(index, \"prop6\", e.target.value)}\n            />\n          ) : (\n            rowData.prop6\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop7, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 7\"\n              value={rowData.prop7}\n              onChange={(e) => handleFieldChange(index, \"prop7\", e.target.value)}\n            />\n          ) : (\n            rowData.prop7\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop8, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 8\"\n              value={rowData.prop8}\n              onChange={(e) => handleFieldChange(index, \"prop8\", e.target.value)}\n            />\n          ) : (\n            rowData.prop8\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop9, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 9\"\n              value={rowData.prop9}\n              onChange={(e) => handleFieldChange(index, \"prop9\", e.target.value)}\n            />\n          ) : (\n            rowData.prop9\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop10, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 10\"\n              value={rowData.prop10}\n              onChange={(e) => handleFieldChange(index, \"prop10\", e.target.value)}\n            />\n          ) : (\n            rowData.prop10\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop11, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 11\"\n              value={rowData.prop11}\n              onChange={(e) => handleFieldChange(index, \"prop11\", e.target.value)}\n            />\n          ) : (\n            rowData.prop11\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop12, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 12\"\n              value={rowData.prop12}\n              onChange={(e) => handleFieldChange(index, \"prop12\", e.target.value)}\n            />\n          ) : (\n            rowData.prop12\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop13, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 13\"\n              value={rowData.prop13}\n              onChange={(e) => handleFieldChange(index, \"prop13\", e.target.value)}\n            />\n          ) : (\n            rowData.prop13\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[rowData.prop14, isEditing]}>\n        <TableCell>\n          {isEditing ? (\n            <TextField\n              label=\"Prop 14\"\n              value={rowData.prop14}\n              onChange={(e) => handleFieldChange(index, \"prop14\", e.target.value)}\n            />\n          ) : (\n            rowData.prop14\n          )}\n        </TableCell>\n      </Memo>\n      <Memo deps={[isEditing]}>\n        <TableCell>\n          <Button onClick={handleSwitchEditMode} variant=\"contained\">\n            {isEditing ? \"Save\" : \"Edit\"}\n          </Button>\n        </TableCell>\n      </Memo>\n    </TableRow>\n  )\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\"\nimport { useCallback, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Memo } from \"../components/Memo\"\nimport sampleTableData from \"../assets/data/sample-table-data.json\"\nimport { HeavyTableRow } from \"../components/HeavyTable/HeavyTableRow\"\n\nexport type ItemType = typeof sampleTableData.data[0]\n\nexport const HeavyTable = () => {\n  const sampleData = sampleTableData.data\n  const generatedData = Array(200)\n    .fill(0)\n    .map(() => sampleData[Math.round(Math.random() * sampleData.length - 1)])\n    .filter((item) => !!item)\n  const [data, setData] = useState(generatedData)\n\n  const handleFieldChange = useCallback((index: number, field: string, value: string) => {\n    setData((prevData) => prevData.map((item, idx) => (idx === index ? { ...item, [field]: value } : item)))\n  }, [])\n\n  return (\n    <Root>\n      <Table>\n        <Memo>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Prop 1</TableCell>\n              <TableCell>Prop 2</TableCell>\n              <TableCell>Prop 3</TableCell>\n              <TableCell>Prop 4</TableCell>\n              <TableCell>Prop 5</TableCell>\n              <TableCell>Prop 6</TableCell>\n              <TableCell>Prop 7</TableCell>\n              <TableCell>Prop 8</TableCell>\n              <TableCell>Prop 9</TableCell>\n              <TableCell>Prop 10</TableCell>\n              <TableCell>Prop 11</TableCell>\n              <TableCell>Prop 12</TableCell>\n              <TableCell>Prop 13</TableCell>\n              <TableCell>Prop 14</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n        </Memo>\n        <TableBody>\n          {data.map((item, index) => (\n            <Memo deps={[JSON.stringify(data[index])]}>\n              <HeavyTableRow key={index} rowData={item} index={index} handleFieldChange={handleFieldChange} />\n            </Memo>\n          ))}\n        </TableBody>\n      </Table>\n    </Root>\n  )\n}\n\nconst Root = styled.div`\n  padding: 32px;\n`\n","import { Route, BrowserRouter, Switch } from \"react-router-dom\"\nimport { Home } from \"./pages/Home\"\nimport { HeavyTable } from \"./pages/HeavyTable\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/react-toy-app/heavy-table\">\n          <HeavyTable />\n        </Route>\n        <Route path=\"/react-toy-app\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}